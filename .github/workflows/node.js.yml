# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['14']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    # Cache Node.js modules with the correct path to package-lock.json
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: codebase/rdicidr-0.1.0/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('codebase/rdicidr-0.1.0/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Install dependencies from the codebase/rdicidr-0.1.0 directory
    - name: Install dependencies
      run: |
        cd codebase/rdicidr-0.1.0
        npm install

    # Run linter (ESLint) from the correct directory
    - name: Run linter (ESLint)
      run: |
        cd codebase/rdicidr-0.1.0
        npm run lint

    # Run formatter (Prettier) from the correct directory
    - name: Run formatter (Prettier)
      run: |
        cd codebase/rdicidr-0.1.0
        npm run prettier

    # Run tests (Jest) from the correct directory
    - name: Run tests (Jest)
      env:
        CI: true
      run: |
        cd codebase/rdicidr-0.1.0
        npm run test

    # Build the project from the correct directory
    - name: Build the project
      run: |
        cd codebase/rdicidr-0.1.0
        npm run build
